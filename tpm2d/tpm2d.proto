/*
 * This file is part of trust|me
 * Copyright(c) 2013 - 2017 Fraunhofer AISEC
 * Fraunhofer-Gesellschaft zur FÃ¶rderung der angewandten Forschung e.V.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2 (GPL 2), as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GPL 2 license for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, see <http://www.gnu.org/licenses/>
 *
 * The full GNU General Public License is included in this distribution in
 * the file called "COPYING".
 *
 * Contact Information:
 * Fraunhofer AISEC <trustme@aisec.fraunhofer.de>
 */

// type of attestation in the IDS context
enum IdsAttestationType {
  // kernel + core container (PCR 0 to 10)
  BASIC = 0;

  // everything (PCRs 0 to 23)
  ALL = 1;

  // PCRs must be specified manually
  ADVANCED = 2;
}

message Pcr {
  // the PCR number (usually between 0 and 23)
  optional int32 number = 1;

  // the value of PCR<number>
  optional string value = 2;
}

message ControllerToTpm {
	enum Code {
		INTERNAL_ATTESTATION_REQ = 1;
		DMCRYPT_SETUP = 2;
		EXIT = 3;
	}

	required Code code = 1;

	// type of attestation in the IDS context
	optional IdsAttestationType atype = 2 [default = BASIC];

	// qualifingData (i.e. external data provided by the caller, such as a nonce)
	optional string qualifyingData = 3;

	// pcr bitmask for AttestationType ADVANCED only
	//  - for BASIC, the default PCRs are PCRs 0 to 10
	//  - for ALL  , the default PCRs are PCRs 0 to 23
	optional int32 pcrs = 4;

	// if command FDE_DM_SETUP this is the blk device which is used
	// as pysical device for the mapping
	optional string dmcrypt_device = 5;
}

message TpmToController {
	enum Code {
		INTERNAL_ATTESTATION_RES = 1;
	}

	required Code code = 1;

	// type of attestation in the IDS context
	optional IdsAttestationType atype = 2 [default = BASIC];

	// the hash algorith used to sign the quoted information
	optional string halg = 3;

	// the quoted information (a TPM2B_ATTEST data structure)
	optional string quoted = 4;

	// the signature over 'quoted' (a TPMT_SIGNATURE data structure)
	optional string signature = 5;

	// the explicit PCR values
	repeated Pcr pcr_values = 6;

	// an _optional_ URI to a certificate that includes the public key
	optional string certificate_uri = 7;

}
